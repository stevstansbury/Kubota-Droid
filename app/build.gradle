apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'io.fabric'
apply plugin: 'project-report'
apply plugin: 'com.google.gms.google-services'

android {
    def getVersionName = { ->
        def stdout = new ByteArrayOutputStream()
        exec {
            commandLine 'git', 'describe', 'HEAD', '--tags', '--always', '--abbrev=0'
            standardOutput = stdout
        }
        return stdout.toString().trim()
    }

    def getBuildNumber = { ->
        def stdout = new ByteArrayOutputStream()
        exec {
            commandLine 'git', 'rev-list', 'HEAD', '--count'
            standardOutput = stdout
        }
        return stdout.toString().trim().toBigInteger()
    }

    compileSdkVersion compiled_sdk_version
    defaultConfig {
        applicationId "com.kubotausa.mykubota"
        minSdkVersion min_sdk_version
        targetSdkVersion target_sdk_version
        versionName(getVersionName())
        versionCode(getBuildNumber())
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

        signingConfigs {

            release {
                storeFile file("../signingKey")
                storePassword "myKubota"
                keyAlias "kubota-droid"
                keyPassword "myKubota"
            }

        }

        resValue "string", "google_maps_key", (project.findProperty("GOOGLE_MAPS_API_KEY") ?: "")
    }

    sourceSets {
        debug {
            res.srcDirs = ['src/debug/res']
        }

        qa {
            res.srcDirs = ['src/qa/res']
        }
    }

    buildTypes {
        debug {
            applicationIdSuffix ".debug"
        }

        release {
            minifyEnabled true
            shrinkResources true
            signingConfig signingConfigs.release
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }

        qa {
            initWith release
            applicationIdSuffix ".qa"
        }
    }
    compileOptions {
        targetCompatibility 1.8
        sourceCompatibility 1.8
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    api project(path: ':repository')
    implementation 'androidx.appcompat:appcompat:1.1.0'
    implementation 'com.google.android.material:material:1.0.0'
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
    implementation 'androidx.lifecycle:lifecycle-extensions:2.1.0'
    implementation 'androidx.browser:browser:1.2.0'
    implementation 'com.squareup.picasso:picasso:2.5.2'
    implementation 'com.google.android.libraries.places:places-compat:2.2.0'
    implementation 'com.google.maps.android:android-maps-utils:0.5'
    implementation('com.crashlytics.sdk.android:crashlytics:2.10.1@aar') {
        transitive = true
    }
    implementation 'com.google.firebase:firebase-analytics:17.2.3'
    implementation 'com.google.firebase:firebase-ml-vision:24.0.1'
    implementation 'com.google.firebase:firebase-ml-vision-barcode-model:16.0.2'

    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test:runner:1.2.0'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0'
}
