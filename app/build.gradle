apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'io.fabric'

android {
    def getVersionName = { ->
        def stdout = new ByteArrayOutputStream()
        exec {
            commandLine 'git', 'describe', 'HEAD', '--tags', '--always', '--abbrev=0'
            standardOutput = stdout
        }
        return stdout.toString().trim()
    }

    def getBuildNumber = { ->
        def stdout = new ByteArrayOutputStream()
        exec {
            commandLine 'git', 'rev-list', 'HEAD', '--count'
            standardOutput = stdout
        }
        return stdout.toString().trim().toBigInteger()
    }

    compileSdkVersion compiled_sdk_version
    defaultConfig {
        applicationId "com.kubotausa.mykubota"
        minSdkVersion min_sdk_version
        targetSdkVersion target_sdk_version
        versionName(getVersionName())
        versionCode(getBuildNumber())
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

        signingConfigs {

            release {
                storeFile file("../signingKey")
                storePassword "myKubota"
                keyAlias "kubota-droid"
                keyPassword "myKubota"
            }

        }

        resValue "string", "google_maps_key", (project.findProperty("GOOGLE_MAPS_API_KEY") ?: "")
    }

    buildTypes {
        debug {
            applicationIdSuffix ".debug"
        }

        release {
            minifyEnabled true
            shrinkResources true
            signingConfig signingConfigs.release
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        targetCompatibility 1.8
        sourceCompatibility 1.8
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    api project(path: ':repository')
    implementation 'com.android.support:appcompat-v7:28.0.0'
    implementation 'com.android.support:design:28.0.0'
    implementation 'com.android.support.constraint:constraint-layout:1.1.3'
    implementation ("android.arch.lifecycle:extensions:1.1.1") {
        exclude group: 'android.arch.lifecycle'
        exclude group: 'android.arch.core'
        exclude group: 'com.android.support', module: 'support-fragment'
    }
    implementation ('com.android.support:customtabs:28.0.0') {
        exclude group: 'com.android.support', module: 'support-compat'
        exclude group: 'com.android.support', module: 'interpolator'
        exclude group: 'com.android.support', module: 'collections'
        exclude group: 'com.android.support', module: 'support-core-ui'
    }
    implementation 'com.squareup.picasso:picasso:2.5.2'
    implementation ('com.google.android.gms:play-services:12.0.1') {
        exclude module: 'support-v4'
    }
    implementation 'com.google.maps.android:android-maps-utils:0.5'
    implementation('com.crashlytics.sdk.android:crashlytics:2.10.0@aar') {
        transitive = true;
    }

    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'com.android.support.test:runner:1.0.2'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.2'
}
