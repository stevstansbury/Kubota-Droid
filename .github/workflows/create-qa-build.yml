name: Create Staging Build

on:
  workflow_dispatch:
    inputs:
      tag_name:
        description: 'Version tag'
        required: true
      branch:
        description: 'Branch to make a build from'
        required: true

jobs:
  test_and_bump_version:
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2
        with:
          ref: ${{ github.event.inputs.branch }}
          fetch-depth: '0'

      - name: Generate apikey.properties file
        env:
          SECRETS_PROPERTIES: ${{ secrets.APIKEY_PROPERTIES_BASE64 }}
        run: echo "$SECRETS_PROPERTIES" | base64 -d > ./apikey.properties

      - name: Set up JDK 8
        uses: actions/setup-java@v1
        with:
          java-version: 8

      - name: Setup Gradle Dependencies Cache
        uses: actions/cache@v2
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-caches-${{ hashFiles('**/*.gradle', '**/*.gradle.kts') }}

      - name: Setup Gradle Wrapper Cache
        uses: actions/cache@v2
        with:
          path: ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-wrapper-${{ hashFiles('**/gradle/wrapper/gradle-wrapper.properties') }}

      - name: Build and Test
        run: ./gradlew test

      - name: Bump version and push tag
        uses: anothrNick/github-tag-action@1.34.0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          CUSTOM_TAG: ${{ github.event.inputs.tag_name }}
          RELEASE_BRANCHES: ${{ github.event.inputs.branch }}

  build_qa_aab:
    needs: test_and_bump_version
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2
        with:
          ref: ${{ github.event.inputs.branch }}
          fetch-depth: '0'

      - name: Generate apikey.properties file
        env:
          SECRETS_PROPERTIES: ${{ secrets.APIKEY_PROPERTIES_BASE64 }}
        run: echo "$SECRETS_PROPERTIES" | base64 -d > ./apikey.properties

      - name: Set up JDK 8
        uses: actions/setup-java@v1
        with:
          java-version: 8

      - name: Setup Gradle Dependencies Cache
        uses: actions/cache@v2
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-caches-${{ hashFiles('**/*.gradle', '**/*.gradle.kts') }}

      - name: Setup Gradle Wrapper Cache
        uses: actions/cache@v2
        with:
          path: ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-wrapper-${{ hashFiles('**/gradle/wrapper/gradle-wrapper.properties') }}

      - name: Generate QA aab
        run: ./gradlew bundleQa

      - uses: r0adkll/sign-android-release@v1
        name: Sign app aab
        with:
          releaseDirectory: app/build/outputs/bundle/qa
          signingKeyBase64: ${{ secrets.STAGING_KEYSTORE_BASE64 }}
          alias: 'ims-kubota-upload'
          keyStorePassword: ${{ secrets.STAGING_STORE_PASSWORD }}
          keyPassword: ${{ secrets.STAGING_KEY_PASSWORD }}
        env:
          BUILD_TOOLS_VERSION: "30.0.2"

      - name: Prepare for aab upload
        run: |
          mkdir qaArtifact
          mv app/build/outputs/bundle/qa/app-qa.aab "qaArtifact/app-qa-${{ github.event.inputs.tag_name }}.aab"
          ls -la qaArtifact

      - uses: actions/upload-artifact@v2
        with:
          name: ${{ github.event.inputs.tag_name }}-aab
          path: qaArtifact/app-qa-${{ github.event.inputs.tag_name }}.aab

  build_qa_apk:
    needs: test_and_bump_version
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2
        with:
          ref: ${{ github.event.inputs.branch }}
          fetch-depth: '0'

      - name: Generate apikey.properties file
        env:
          SECRETS_PROPERTIES: ${{ secrets.APIKEY_PROPERTIES_BASE64 }}
        run: echo "$SECRETS_PROPERTIES" | base64 -d > ./apikey.properties

      - name: Set up JDK 8
        uses: actions/setup-java@v1
        with:
          java-version: 8

      - name: Setup Gradle Dependencies Cache
        uses: actions/cache@v2
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-caches-${{ hashFiles('**/*.gradle', '**/*.gradle.kts') }}

      - name: Setup Gradle Wrapper Cache
        uses: actions/cache@v2
        with:
          path: ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-wrapper-${{ hashFiles('**/gradle/wrapper/gradle-wrapper.properties') }}

      - name: Generate QA apk
        run: ./gradlew assembleQA

      - uses: r0adkll/sign-android-release@v1
        name: Sign app APK
        with:
          releaseDirectory: app/build/outputs/apk/qa
          signingKeyBase64: ${{ secrets.STAGING_KEYSTORE_BASE64 }}
          alias: 'ims-kubota-upload'
          keyStorePassword: ${{ secrets.STAGING_STORE_PASSWORD }}
          keyPassword: ${{ secrets.STAGING_KEY_PASSWORD }}
        env:
          BUILD_TOOLS_VERSION: "30.0.2"

      - name: Prepare for apk upload
        run: |
          mkdir qaArtifact
          mv app/build/outputs/apk/qa/app-qa-unsigned-signed.apk "qaArtifact/app-qa-${{ github.event.inputs.tag_name }}.apk"
          ls -la qaArtifact

      - uses: actions/upload-artifact@v2
        with:
          name: ${{ github.event.inputs.tag_name }}-apk
          path: qaArtifact/app-qa-${{ github.event.inputs.tag_name }}.apk

  upload_to_google_play:
    needs: build_qa_aab
    runs-on: ubuntu-20.04
    steps:
      - name: Generate service_account.json file
        env:
          SERVICE_ACCOUNT_JSON_BASE64: ${{ secrets.SERVICE_ACCOUNT_JSON_BASE64 }}
        run: echo "$SERVICE_ACCOUNT_JSON_BASE64" | base64 -d > ./service_account.json

      - uses: actions/download-artifact@v2
        with:
          name: ${{ github.event.inputs.tag_name }}-aab

      - name: Upload To Google Play
        uses: r0adkll/upload-google-play@v1.0.15
        with:
          serviceAccountJson: service_account.json
          packageName: com.inmotionsoftware.kubota.qa
          releaseFiles: app-qa-${{ github.event.inputs.tag_name }}.aab
          track: internal
